-- Coturn Cluster Database Schema
-- Auto-generated by setup script

-- Users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    realm VARCHAR(100) NOT NULL,
    quota_mb INTEGER DEFAULT NULL,
    bandwidth_bps BIGINT DEFAULT NULL,
    expires_at TIMESTAMP DEFAULT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Node registry table  
CREATE TABLE nodes (
    id SERIAL PRIMARY KEY,
    node_id VARCHAR(100) UNIQUE NOT NULL,
    ip_address INET NOT NULL,
    turn_port INTEGER NOT NULL,
    turns_port INTEGER NOT NULL,
    agent_port INTEGER NOT NULL,
    status VARCHAR(20) DEFAULT 'connected',
    version VARCHAR(20),
    agent_version VARCHAR(20),
    capabilities TEXT[] DEFAULT '{}',
    resources JSONB DEFAULT '{}',
    last_heartbeat TIMESTAMP DEFAULT NOW(),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- User-Node sync tracking
CREATE TABLE user_node_sync (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    node_id VARCHAR(100) REFERENCES nodes(node_id) ON DELETE CASCADE,
    sync_status VARCHAR(20) DEFAULT 'pending',
    synced_at TIMESTAMP DEFAULT NOW(),
    error_message TEXT DEFAULT NULL,
    operation VARCHAR(20) NOT NULL
);

-- Configuration table
CREATE TABLE cluster_config (
    id SERIAL PRIMARY KEY,
    config_type VARCHAR(50) NOT NULL,
    config_key VARCHAR(100) NOT NULL,
    config_value TEXT NOT NULL,
    applied_to_nodes TEXT[] DEFAULT '{}',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    UNIQUE(config_type, config_key)
);

-- Audit log table
CREATE TABLE audit_logs (
    id SERIAL PRIMARY KEY,
    action VARCHAR(100) NOT NULL,
    resource_type VARCHAR(50) NOT NULL,
    resource_id VARCHAR(100),
    old_values JSONB,
    new_values JSONB,
    performed_by VARCHAR(100) DEFAULT 'system',
    performed_at TIMESTAMP DEFAULT NOW(),
    source_ip INET,
    user_agent TEXT
);

-- Indexes
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_realm ON users(realm);
CREATE INDEX idx_nodes_node_id ON nodes(node_id);
CREATE INDEX idx_nodes_status ON nodes(status);
CREATE INDEX idx_user_node_sync_user_id ON user_node_sync(user_id);
CREATE INDEX idx_cluster_config_type ON cluster_config(config_type);
CREATE INDEX idx_audit_logs_action ON audit_logs(action);

-- Default configuration
INSERT INTO cluster_config (config_type, config_key, config_value) VALUES
('global', 'max-bps', '1000000'),
('global', 'total-quota', '100'),
('network', 'min-port', '49152'),
('network', 'max-port', '65535'),
('auth', 'use-auth-secret', 'true'),
('limits', 'user-quota', '50'),
('logging', 'log-level', 'info');

-- Default users
INSERT INTO users (username, password, realm) VALUES
('admin', 'admin123', 'admin.local'),
('testuser', 'testpass', 'example.com');

-- Update timestamp function
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Triggers
CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
CREATE TRIGGER update_nodes_updated_at BEFORE UPDATE ON nodes
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
